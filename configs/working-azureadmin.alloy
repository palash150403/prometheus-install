// Collecting Logforward_to = [loki.write.grafana_loki.receiver]s from multiple consumer Groups and processing logs through diffrent process blocks.

discovery.relabel "logs_integrations_integrations_azure_event_hubs" {
    targets = []

    rule {
      source_labels = ["__meta_kafka_group_id"]
      target_label  = "azure_resource"
    }
 }


// Webapp Activity Logs source
loki.source.azure_event_hubs "webappact_logs_integrations_integrations_azure_event_hubs" {
    fully_qualified_namespace = "test-event-hub-loki.servicebus.windows.net:9093"
    event_hubs                = ["test-event-hub-lloki"]
    group_id = "webappactivitylog"

    authentication {
      mechanism         = "connection_string"
      connection_string = "Endpoint=sb://test-event-hub-loki.servicebus.windows.net/;"
    }

    relabel_rules          = discovery.relabel.logs_integrations_integrations_azure_event_hubs.rules
    forward_to = [loki.process.process_logswebact.receiver]
}

// Webapp Logs source
loki.source.azure_event_hubs "webapp_logs_integrations_integrations_azure_event_hubs" {
    fully_qualified_namespace = "test-event-hub-loki.servicebus.windows.net:9093"
    event_hubs                = ["test-event-hub-lloki"]
    group_id = "webapplogs"

    authentication {
      mechanism         = "connection_string"
      connection_string = "Endpoint=sb://test-event-hub-loki.servicebus.windows.net/;"
    }

    relabel_rules          = discovery.relabel.logs_integrations_integrations_azure_event_hubs.rules
    forward_to = [loki.process.process_logsweb.receiver]
}

// SQL Logs source
loki.source.azure_event_hubs "sql_logs_integrations_integrations_azure_event_hubs" {
    fully_qualified_namespace = "test-event-hub-loki.servicebus.windows.net:9093"
    event_hubs                = ["test-event-hub-lloki"]
    group_id = "sql"

    authentication {
      mechanism         = "connection_string"
      connection_string = "Endpoint=sb://test-event-hub-loki.servicebus.windows.net/;"
    }

    relabel_rules          = discovery.relabel.logs_integrations_integrations_azure_event_hubs.rules

    forward_to = [loki.process.process_logsql.receiver]
}

// Function App logs source
loki.source.azure_event_hubs "functionapp_logs_integrations_integrations_azure_event_hubs" {
    fully_qualified_namespace = "test-event-hub-loki.servicebus.windows.net:9093"
    event_hubs                = ["test-event-hub-lloki"]
    group_id = "functionapp"

    authentication {
      mechanism         = "connection_string"
      connection_string = "Endpoint=sb://test-event-hub-loki.servicebus.windows.net/;"
    }

    relabel_rules          = discovery.relabel.logs_integrations_integrations_azure_event_hubs.rules

    forward_to = [loki.process.process_logsfn.receiver]
}


// PSQL Logs Source
loki.source.azure_event_hubs "psql_logs_integrations_integrations_azure_event_hubs" {
    fully_qualified_namespace = "test-event-hub-loki.servicebus.windows.net:9093"
    event_hubs                = ["test-event-hub-lloki"]
    group_id = "postgres"

    authentication {
      mechanism         = "connection_string"
      connection_string = "Endpoint=sb://test-event-hub-loki.servicebus.windows.net/;"
    }

    relabel_rules          = discovery.relabel.logs_integrations_integrations_azure_event_hubs.rules

    forward_to = [loki.process.process_logspsql.receiver]
}


// SQL logs process stage
loki.process "process_logsql" {


    stage.label_drop {
        values = [ "job", "service_name" ]
    }

    stage.json {
        expressions = {
            "resourceId"    = "resourceId",
            "category"      = "category",
            "message"      = "properties.message",
            "level"      = "level",
        }
    }
    stage.regex {
       source = "resourceId"
       expression = "(?i).*/providers/[^/]+/[^/]+/(?P<resource_name>[^/]+)"
    }
    stage.labels {
        values = { "category" = "category", "level" = "level", "resource_name" = "resource_name", }
    }

    stage.output {
        source = "message"
    }


    forward_to = [loki.write.grafana_loki.receiver]
}


// Function App logs process stage
loki.process "process_logsfn" {


    stage.label_drop {
        values = [ "job", "service_name" ]
    }

    stage.json {
        expressions = {
            "resourceId"    = "resourceId",
            "category"      = "category",
            "message"      = "properties.message",
            "level"      = "level",
        }
    }
    stage.regex {
       source = "resourceId"
       expression = "(?i).*/providers/[^/]+/[^/]+/(?P<resource_name>[^/]+)"
    }
    stage.regex {
        source     = "operationName"
        expression = "(?i).*/(?P<op_short>[^/]+/[^/]+)$"
    }
    stage.labels {
        values = { "category" = "category", "level" = "level", "resource_name" = "resource_name", }
    }

    stage.template {
        source = "name"
        template = "[{{ .level }}] {{ .message }}"
    }

    stage.output {
        source = "name"
    }

    forward_to = [loki.write.grafana_loki.receiver]
}



// psql logs process stage
loki.process "process_logspsql" {


    stage.label_drop {
        values = [ "job", "service_name" ]
    }

    stage.json {
        expressions = {
            "resourceId"    = "resourceId",
            "category"      = "category",
            "message"      = "properties.message",
            "errorLevel"      = "properties.errorLevel",
        }
    }
    stage.regex {
       source = "resourceId"
       expression = "(?i).*/providers/[^/]+/[^/]+/(?P<resource_name>[^/]+)"
    }
    stage.regex {
        source     = "operationName"
        expression = "(?i).*/(?P<op_short>[^/]+/[^/]+)$"
    }
    stage.labels {
        values = { "category" = "category", "errorLevel" = "errorLevel", "resource_name" = "resource_name", }
    }

    //stage.template {
      //  source = "name"
        //template = "{{ .message }}"
    //}

    stage.output {
        source = "message"
    }

    forward_to = [loki.write.grafana_loki.receiver]
}

loki.process "process_logswebact" {

    stage.label_drop {
        values = [ "job", "service_name" ]
    }

    stage.json {
        expressions = {
            "resourceId"    = "resourceId",
            "operationName" = "operationName",
            "category"      = "category",
            "identity"      = "identity.claims.name",
            "level"      = "level",
            "name"      = "identity",
        }
    }
    stage.regex {
       source = "resourceId"
       expression = "(?i).*/providers/[^/]+/[^/]+/(?P<resource_name>[^/]+)"
    }
    stage.regex {
        source     = "operationName"
        expression = "(?i).*/(?P<op_short>[^/]+/[^/]+)$"
    }
    stage.labels {
        values = { "category" = "category", "level" = "level", "resource_name" = "resource_name", }
    }

    stage.template {
        source = "name"
        template = "{{ .identity }} has performed {{ .op_short }} on {{ .resource_name }}"
    }

    stage.output {
        source = "name"
    }

    forward_to = [loki.write.grafana_loki.receiver]

}

// Webapp logs process stage
loki.process "process_logsweb" {
  forward_to = [loki.write.grafana_loki.receiver]

   stage.label_drop {
        values = [ "job", "service_name" ]
   }

   stage.json {
       expressions = {
           "resourceId"    = "resourceId",
           "category"      = "category",
           "resultDescription"      = "resultDescription",
           "level"      = "level",
       }
   }

   stage.regex {
      source = "resourceId"
      expression = "(?i).*/providers/[^/]+/[^/]+/(?P<resource_name>[^/]+)"
   }
   stage.labels {
       values = { "category" = "category", "level" = "level", "resource_name" = "resource_name", }
   }
   stage.output {
       source = "resultDescription"
   }
}

  loki.write "grafana_loki" {
    endpoint {
      url = "http://localhost:3100/loki/api/v1/push"
    }
  }